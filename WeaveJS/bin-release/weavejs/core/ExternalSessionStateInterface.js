/**
 * Generated by Apache Flex Cross-Compiler from weavejs\core\ExternalSessionStateInterface.as
 * weavejs.core.ExternalSessionStateInterface
 *
 * @fileoverview
 *
 * @suppress {checkTypes}
 */

goog.provide('weavejs.core.ExternalSessionStateInterface');

goog.require('weavejs.Weave');
goog.require('weavejs.WeaveAPI');
goog.require('weavejs.compiler.StandardLib');
goog.require('weavejs.path.WeavePath');
goog.require('weavejs.utils.Dictionary2D');
goog.require('weavejs.utils.Utils');
goog.require('weavejs.api.core.IExternalSessionStateInterface');
goog.require('weavejs.api.core.ILinkableDynamicObject');
goog.require('weavejs.api.core.ILinkableHashMap');
goog.require('weavejs.api.core.ILinkableObject');



/**
 * @constructor
 * @implements {weavejs.api.core.IExternalSessionStateInterface}
 * @param {weavejs.api.core.ILinkableHashMap} root
 */
weavejs.core.ExternalSessionStateInterface = function(root) {
  this.root = root;
  this._variables = {};
  weavejs.core.ExternalSessionStateInterface._d2d_callback_target = new weavejs.utils.Dictionary2D();
  weavejs.core.ExternalSessionStateInterface._map_func_wrapper = new weavejs.utils.Utils.Map();
};


/**
 * @private
 * @type {weavejs.api.core.ILinkableHashMap}
 */
weavejs.core.ExternalSessionStateInterface.prototype.root;


/**
 * @private
 * @type {Object}
 */
weavejs.core.ExternalSessionStateInterface.prototype._variables;


/**
 * @private
 * @type {string}
 */
weavejs.core.ExternalSessionStateInterface.prototype.getObjectFromPath_error;


/**
 * @inheritDoc
 * @export
 * @param {weavejs.path.WeavePath} path
 * @return {Object}
 */
weavejs.core.ExternalSessionStateInterface.prototype.getSessionState = function(path) {
  var /** @type {weavejs.api.core.ILinkableObject} */ object = weavejs.WeaveAPI.SessionManager.getObject(this.root, path.getPath());
  if (object)
    return weavejs.WeaveAPI.SessionManager.getSessionState(object);
  weavejs.core.ExternalSessionStateInterface.warning("No ILinkableObject from which to get session state at {0}", path);
  return null;
};


/**
 * @inheritDoc
 * @export
 * @param {weavejs.path.WeavePath} path
 * @param {string} objectType
 * @return {boolean}
 */
weavejs.core.ExternalSessionStateInterface.prototype.requestObject = function(path, objectType) {
  var /** @type {Object} */ classDef = weavejs.Weave.getDefinition(objectType);
  if (classDef == null) {
    weavejs.core.ExternalSessionStateInterface.throwError("No class definition for {0}", JSON.stringify(objectType));
    return false;
  }
  var /** @type {Array} */ objectPath = path.getPath();
  if (!objectPath || !objectPath.length) {
    if (Object(this.root).constructor == classDef)
      return true;
    weavejs.core.ExternalSessionStateInterface.throwError("Cannot request an object at the root path");
    return false;
  }
  var /** @type {Array} */ parentPath = objectPath.concat();
  var /** @type {Object} */ childName = parentPath.pop();
  var /** @type {weavejs.api.core.ILinkableObject} */ parent = weavejs.WeaveAPI.SessionManager.getObject(this.root, parentPath);
  var /** @type {weavejs.api.core.ILinkableHashMap} */ hashMap = org.apache.flex.utils.Language.as(parent, weavejs.api.core.ILinkableHashMap);
  var /** @type {weavejs.api.core.ILinkableDynamicObject} */ dynamicObject = org.apache.flex.utils.Language.as(parent, weavejs.api.core.ILinkableDynamicObject);
  var /** @type {Object} */ child = null;
  if (hashMap) {
    if (org.apache.flex.utils.Language.is(childName, Number))
      childName = hashMap.getNames()[childName];
    child = hashMap.requestObject(org.apache.flex.utils.Language.as(childName, String), classDef, false);
  }
  else if (dynamicObject)
    child = dynamicObject.requestGlobalObject(org.apache.flex.utils.Language.as(childName, String), classDef, false);
  else
    child = weavejs.WeaveAPI.SessionManager.getObject(this.root, objectPath);
  if (child && child.constructor == classDef)
    return true;
  weavejs.core.ExternalSessionStateInterface.throwError("Request for {0} failed at path {1}", objectType, JSON.stringify(objectPath));
  return false;
};


/**
 * @inheritDoc
 * @export
 * @param {weavejs.path.WeavePath} path
 * @return {boolean}
 */
weavejs.core.ExternalSessionStateInterface.prototype.removeObject = function(path) {
  if (!path || !path.getPath().length) {
    weavejs.core.ExternalSessionStateInterface.throwError("Cannot remove root object");
    return false;
  }
  var /** @type {Array} */ parentPath = path.getPath();
  var /** @type {Object} */ childName = parentPath.pop();
  var /** @type {weavejs.api.core.ILinkableObject} */ parent = weavejs.WeaveAPI.SessionManager.getObject(this.root, parentPath);
  var /** @type {weavejs.api.core.ILinkableHashMap} */ hashMap = org.apache.flex.utils.Language.as(parent, weavejs.api.core.ILinkableHashMap);
  if (hashMap) {
    if (org.apache.flex.utils.Language.is(childName, Number))
      childName = hashMap.getNames()[childName];
    if (hashMap.objectIsLocked(org.apache.flex.utils.Language.as(childName, String))) {
      weavejs.core.ExternalSessionStateInterface.throwError("Object is locked and cannot be removed: {0}", path);
      return false;
    }
    hashMap.removeObject(org.apache.flex.utils.Language.as(childName, String));
    return true;
  }
  var /** @type {weavejs.api.core.ILinkableDynamicObject} */ dynamicObject = org.apache.flex.utils.Language.as(parent, weavejs.api.core.ILinkableDynamicObject);
  if (dynamicObject) {
    if (dynamicObject.locked) {
      weavejs.core.ExternalSessionStateInterface.throwError("Object is locked and cannot be removed: {0}", path);
      return false;
    }
    dynamicObject.removeObject();
    return true;
  }
  if (parent)
    weavejs.core.ExternalSessionStateInterface.throwError("Parent object does not support dynamic children, so cannot remove child at {0}", path);
  else
    weavejs.core.ExternalSessionStateInterface.throwError("No parent from which to remove a child at {0}", path);
  return false;
};


/**
 * @inheritDoc
 * @export
 * @param {weavejs.path.WeavePath} path
 * @param {string} expression
 * @param {Object=} variables
 * @param {Array=} staticLibraries
 * @param {string=} assignVariableName
 * @return {*}
 */
weavejs.core.ExternalSessionStateInterface.prototype.evaluateExpression = function(path, expression, variables, staticLibraries, assignVariableName) {
  variables = typeof variables !== 'undefined' ? variables : null;
  staticLibraries = typeof staticLibraries !== 'undefined' ? staticLibraries : null;
  assignVariableName = typeof assignVariableName !== 'undefined' ? assignVariableName : null;
  return undefined;
};


/**
 * @private
 * @type {weavejs.utils.Dictionary2D}
 */
weavejs.core.ExternalSessionStateInterface._d2d_callback_target;


/**
 * @private
 * @type {Object}
 */
weavejs.core.ExternalSessionStateInterface._map_func_wrapper;


/**
 * @inheritDoc
 * @export
 * @param {weavejs.path.WeavePath} path
 * @param {Function} callback
 * @param {boolean=} triggerCallbackNow
 * @param {boolean=} immediateMode
 * @param {boolean=} delayWhileBusy
 * @return {boolean}
 */
weavejs.core.ExternalSessionStateInterface.prototype.addCallback = function(path, callback, triggerCallbackNow, immediateMode, delayWhileBusy) {
  triggerCallbackNow = typeof triggerCallbackNow !== 'undefined' ? triggerCallbackNow : false;
  immediateMode = typeof immediateMode !== 'undefined' ? immediateMode : false;
  delayWhileBusy = typeof delayWhileBusy !== 'undefined' ? delayWhileBusy : true;
  try {
    if (!path) {
      weavejs.core.ExternalSessionStateInterface.throwError("addCallback(): No path given");
      return false;
    }
    var /** @type {weavejs.api.core.ILinkableObject} */ object = weavejs.WeaveAPI.SessionManager.getObject(this.root, path.getPath());
    if (!object) {
      weavejs.core.ExternalSessionStateInterface.throwError("No ILinkableObject to which to add a callback at path or variable {0}", JSON.stringify(path));
      return false;
    }
    if (delayWhileBusy) {
      var /** @type {Function} */ wrapper = weavejs.core.ExternalSessionStateInterface._map_func_wrapper.get(callback);
      if (!wrapper) {
        wrapper = this.generateBusyWaitWrapper(callback);
        weavejs.core.ExternalSessionStateInterface._map_func_wrapper.set(callback, wrapper);
      }
      callback = wrapper;
    }
    weavejs.core.ExternalSessionStateInterface._d2d_callback_target.set(callback, object, true);
    if (immediateMode)
      weavejs.WeaveAPI.SessionManager.getCallbackCollection(object).addImmediateCallback(null, callback, triggerCallbackNow);
    else
      weavejs.WeaveAPI.SessionManager.getCallbackCollection(object).addGroupedCallback(null, callback, triggerCallbackNow);
    return true;
  } catch (e) {
    weavejs.Weave.error(e);
  }
  return false;
};


/**
 * @private
 * @param {Function} callback
 * @return {Function}
 */
weavejs.core.ExternalSessionStateInterface.prototype.generateBusyWaitWrapper = function(callback) {
  var self = this;
  var /** @type {Function} */ wrapper = function() {
    var /** @type {Object} */ map_target = weavejs.core.ExternalSessionStateInterface._d2d_callback_target.map.get(wrapper);
    for (var foreachiter0 in weavejs.Weave.toArray(map_target.keys())) 
    {
    var target = weavejs.Weave.toArray(map_target.keys())[foreachiter0];
    
      if (weavejs.WeaveAPI.SessionManager.linkableObjectIsBusy(target))
        return;}
    
    callback.apply(this);
  };
  return wrapper;
};


/**
 * @inheritDoc
 * @export
 * @param {weavejs.path.WeavePath} path
 * @param {Function} callback
 * @param {boolean=} everywhere
 * @return {boolean}
 */
weavejs.core.ExternalSessionStateInterface.prototype.removeCallback = function(path, callback, everywhere) {
  everywhere = typeof everywhere !== 'undefined' ? everywhere : false;
  var /** @type {Function} */ wrapper = weavejs.core.ExternalSessionStateInterface._map_func_wrapper.get(callback);
  if (wrapper != null && !this.removeCallback(path, wrapper, everywhere))
    return false;
  if (everywhere) {
    var /** @type {Object} */ map_target = weavejs.core.ExternalSessionStateInterface._d2d_callback_target.map.get(callback);
    if (map_target)
      for (var foreachiter1 in weavejs.Weave.toArray(map_target.keys())) 
      {
      var target = weavejs.Weave.toArray(map_target.keys())[foreachiter1];
      
        weavejs.WeaveAPI.SessionManager.getCallbackCollection(target).removeCallback(callback);}
      
    weavejs.core.ExternalSessionStateInterface._d2d_callback_target.removeAllPrimary(callback);
    weavejs.core.ExternalSessionStateInterface._map_func_wrapper['delete'](callback);
    return true;
  }
  try {
    if (!path) {
      weavejs.core.ExternalSessionStateInterface.warning("removeCallback(): No path or variable name given");
      return false;
    }
    var /** @type {weavejs.api.core.ILinkableObject} */ object = weavejs.WeaveAPI.SessionManager.getObject(this.root, path.getPath());
    if (!object) {
      weavejs.core.ExternalSessionStateInterface.warning("No ILinkableObject from which to remove a callback at path or variable {0}", JSON.stringify(path));
      return false;
    }
    weavejs.core.ExternalSessionStateInterface._d2d_callback_target.remove(callback, object);
    weavejs.WeaveAPI.SessionManager.getCallbackCollection(object).removeCallback(callback);
    return true;
  } catch (e) {
    weavejs.Weave.error(e);
  }
  return false;
};


/**
 * @inheritDoc
 * @export
 */
weavejs.core.ExternalSessionStateInterface.prototype.removeAllCallbacks = function() {
  weavejs.core.ExternalSessionStateInterface._d2d_callback_target.forEach(org.apache.flex.utils.Language.closure(this.removeAllCallbacks_each, this, 'removeAllCallbacks_each'), this);
  weavejs.core.ExternalSessionStateInterface._d2d_callback_target = new weavejs.utils.Dictionary2D();
};


/**
 * @private
 * @param {Function} callback
 * @param {weavejs.api.core.ILinkableObject} target
 * @param {*} value
 */
weavejs.core.ExternalSessionStateInterface.prototype.removeAllCallbacks_each = function(callback, target, value) {
  weavejs.WeaveAPI.SessionManager.getCallbackCollection(target).removeCallback(callback);
};


/**
 * @private
 * @param {string} format
 * @param {...} args
 */
weavejs.core.ExternalSessionStateInterface.throwError = function(format, args) {
  args = Array.prototype.slice.call(arguments, 1);
  throw new Error(weavejs.compiler.StandardLib.substitute(format, args));
};


/**
 * @private
 * @param {string} format
 * @param {...} args
 */
weavejs.core.ExternalSessionStateInterface.warning = function(format, args) {
  args = Array.prototype.slice.call(arguments, 1);
  weavejs.Weave.error(weavejs.compiler.StandardLib.substitute("Warning: " + format, args));
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
weavejs.core.ExternalSessionStateInterface.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ExternalSessionStateInterface', qName: 'weavejs.core.ExternalSessionStateInterface'}], interfaces: [weavejs.api.core.IExternalSessionStateInterface] };
