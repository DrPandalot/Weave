/**
 * Generated by Apache Flex Cross-Compiler from weavejs\core\CallbackEntry.as
 * weavejs.core.CallbackEntry
 *
 * @fileoverview
 *
 * @suppress {checkTypes}
 */

goog.provide('weavejs.core.CallbackEntry');

goog.require('weavejs.core.CallbackCollection');



/**
 * @constructor
 * @param {Object} context
 * @param {Function} callback
 */
weavejs.core.CallbackEntry = function(context, callback) {
  this.context = context;
  this.callback = callback;
  if (weavejs.core.CallbackCollection.debug)
    this.addCallback_stackTrace = new Error(weavejs.core.CallbackEntry.STACK_TRACE_ADD);
};


/**
 * @export
 * @type {Object}
 */
weavejs.core.CallbackEntry.prototype.context = null;


/**
 * @export
 * @type {Function}
 */
weavejs.core.CallbackEntry.prototype.callback = null;


/**
 * @export
 * @type {number}
 */
weavejs.core.CallbackEntry.prototype.recursionCount = 0;


/**
 * @export
 * @type {number}
 */
weavejs.core.CallbackEntry.prototype.schedule = 0;


/**
 * @export
 * @type {Error}
 */
weavejs.core.CallbackEntry.prototype.addCallback_stackTrace = null;


/**
 * @export
 * @type {Error}
 */
weavejs.core.CallbackEntry.prototype.removeCallback_stackTrace = null;


/**
 * Call this when the callback entry is no longer needed.
 * @export
 */
weavejs.core.CallbackEntry.prototype.dispose = function() {
  if (weavejs.core.CallbackCollection.debug && this.callback != null)
    this.removeCallback_stackTrace = new Error(weavejs.core.CallbackEntry.STACK_TRACE_REMOVE);
  this.context = null;
  this.callback = null;
};


/**
 * @export
 * @const
 * @type {string}
 */
weavejs.core.CallbackEntry.STACK_TRACE_ADD = "This is the stack trace from when the callback was added.";


/**
 * @export
 * @const
 * @type {string}
 */
weavejs.core.CallbackEntry.STACK_TRACE_REMOVE = "This is the stack trace from when the callback was removed.";


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
weavejs.core.CallbackEntry.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'CallbackEntry', qName: 'weavejs.core.CallbackEntry'}] };
