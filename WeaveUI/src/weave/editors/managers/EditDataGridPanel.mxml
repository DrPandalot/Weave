<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<ui:DraggablePanel xmlns="weave.editors.managers.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
				horizontalScrollPolicy="off" verticalScrollPolicy="off" escapeKeyClosesPanel="true"
				visible="true" title="{lang('View/Edit Data')}" xmlns:ui="weave.ui.*" xmlns:CustomDataGrid="weave.ui.CustomDataGrid.*">
	<mx:VBox width="100%" height="100%">
		<CustomDataGrid:CustomDataGrid id="tableEditor" width="100%" height="100%"/>
	</mx:VBox>
	
	<mx:ControlBar>
		<mx:Spacer width="100%"/>
		<mx:Button id="saveButton" label="{lang('Ok')}" click="removePanel();"/>
		<mx:Button id="cancelButton" label="{lang('Cancel')}" click="removePanel();"/>
	</mx:ControlBar>
	
	<mx:Script>
		<![CDATA[
			
			
			/**
			 * @return The modified rows with columns in modified order.
			 */
			public function getRows():Array
			{
				return tableEditor.getRows();
			}
			
			/**
			 * This function loads data into the grid.
			 * @param tableWithHeader is an array of arrays with all the data including the header
			 * @param editable Set this to true to allow the user to edit the data.
			 **/
			public function setRows(tableWithHeader:Array, editable:Boolean):void
			{
				tableEditor.draggableColumns = editable;
				tableEditor.editable = editable;
				saveButton.visible = editable;
				cancelButton.visible = editable;
				title = editable ? lang("View/Edit Data") : lang("View Data");
				
				tableEditor.setRows(tableWithHeader);
			}
			
			private function removeLeadingAndTrailingQuotes(element:*, index:int, arr:Array):void
			{
				var string:String = String(element);
				
				// if the first character is a quote and last character is a quote
				if(string.charAt(0) == "\"" && string.charAt(string.length-1) == "\"")
				{
					// set this value in the array to be the string with the first character and last character removed
					arr[index] = string.substr(1, string.length-2);
				}
			}
			
			private function trimCommas(value:String):String
			{
				if (value == null || value == "\\N" || value == "NaN" )
					return "";
				var trimmedString:String = "";
				var temp:Array = value.split(",");
				for(var i:int; i <temp.length; i++)
				{
					trimmedString += temp[i];
				}
				return trimmedString;
			}
		]]>
	</mx:Script>
</ui:DraggablePanel>
