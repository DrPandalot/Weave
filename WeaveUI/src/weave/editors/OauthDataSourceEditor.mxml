<?xml version="1.0" encoding="utf-8"?>
<!--
/*
Weave (Web-based Analysis and Visualization Environment)
Copyright (C) 2008-2011 University of Massachusetts Lowell

This file is a part of Weave.

Weave is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License, Version 3,
as published by the Free Software Foundation.

Weave is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:VBox 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns="weave.editors.*"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	creationPolicy="all"
	implements="weave.api.ui.IDataSourceEditor" xmlns:ui="weave.ui.*"
	>
	<mx:Label id="editorTitle" fontWeight="bold" text="{label}"/>
	<ui:Indent label="{lang('Source Name *')}">
		<mx:TextInput id="sourceName" width="100%"/>
	</ui:Indent>
	<ui:Indent label="{lang('Client ID *')}">
		<ui:TextInputWithPrompt id="clientID" width="100%"/>
	</ui:Indent>
	<ui:Indent label="{lang('Client Secret *')}">
		<ui:TextInputWithPrompt id="clientSecret" width="100%"/>
	</ui:Indent>
	<ui:Indent label="{lang('Authorization URI *')}">
		<ui:TextInputWithPrompt id="authUri" width="100%"/>
	</ui:Indent>
	<ui:Indent label="{lang('Token URI *')}">
		<ui:TextInputWithPrompt id="tokenUri" width="100%"/>
	</ui:Indent>
	
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			import weave.api.core.ILinkableObject;
			import weave.api.data.IDataSource;
			import weave.data.DataSources.CKANDataSource;
			import weave.data.DataSources.OauthDataSource;
			
			override protected function createChildren():void
			{
				super.createChildren();
				sourceName.text = WeaveAPI.globalHashMap.generateUniqueName("OauthDataSource");
				
				// temp for testing
				  clientID.text = "20a867dd3176481f9d64f409bfbe3df3";
				  clientSecret.text = "c624be931e554d25b71095e0b69fd6c6";
				  authUri.text = "https://runkeeper.com/apps/authorize";
				  tokenUri.text = "https://runkeeper.com/apps/token";
			}
			
			[Bindable] private var target:OauthDataSource = null;
			public function setTarget(object:ILinkableObject):void
			{
				target = object as OauthDataSource;
				
				if (!parent)
				{
					callLater(setTarget, arguments);
					return;
				}
				
				if (target)
				{
					sourceName.text = WeaveAPI.globalHashMap.getName(target);
					sourceName.editable = false;
					sourceName.toolTip = lang("Source name is not editable once added to the session. If needed, delete the source and add it again with the new name.");
					
					clientID.text = target.clientID.value;
					clientSecret.text = target.clientSecret.value;
					authUri.text = target.authUri.value;
					tokenUri.text = target.tokenUri.value;
					
				
				}
			}
			
			public function hasPendingChanges():Boolean
			{
				return (target.clientID.value || '') != (clientID.text || '')
					|| target.clientSecret.value != clientSecret.text
					|| target.authUri.value != authUri.text
					|| target.tokenUri.value != tokenUri.text;
			}
			
			public function applyChanges():void
			{
				target.clientID.value = clientID.text;
				target.clientSecret.value = clientSecret.text;
				target.authUri.value = authUri.text;
				target.tokenUri.value = tokenUri.text;
				
			}
			
			public function createDataSource():IDataSource
			{
				if (!sourceName.text || (!clientID.text) || (!clientSecret.text) || (!authUri.text)|| (!tokenUri.text))
				{
					Alert.show(lang("Please fill all required fields"), lang("Error"));
					return null;
				}
				if (WeaveAPI.globalHashMap.getObject(sourceName.text))
				{
					Alert.show(lang("Source Name already being used. Please give a different name"), lang("Error"));
					return null;
				}
				
				target = WeaveAPI.globalHashMap.requestObject(sourceName.text, OauthDataSource, false);
				if (!target)
				{
					Alert.show(lang("Unexpected problem. Unable to add the data source."));
					return null;
				}
				applyChanges();
				return target;
			}
		]]>
	</mx:Script>
</mx:VBox>