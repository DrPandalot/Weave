<?xml version="1.0" encoding="utf-8"?>
<!--
/*
Weave (Web-based Analysis and Visualization Environment)
Copyright (C) 2008-2011 University of Massachusetts Lowell

This file is a part of Weave.

Weave is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License, Version 3,
as published by the Free Software Foundation.

Weave is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->

<!---
@author mervetuccar
@author hgranz
-->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300"		 
		 xmlns="weave.editors.*"
		 xmlns:ui="weave.ui.*"
		 label="Disability"
		 implements="weave.api.core.ILinkableObject"
		 enabled="{_panel != null}"	>
	
	<mx:Label text="User generated visualization description text:"
			  textAlign="left"/>
	
	<mx:TextArea id="manualToolDescTextBox" 
				 width="100%" 
				 height="40%" 
				 minWidth="5" 
				 minHeight="5"
				 borderStyle="solid" 
				 editable="true"  
				 keyFocusChange="event.preventDefault(); event.target.replaceSelectedText('\t');"
				 toolTip="changeme"
				 creationComplete="handleCreationComplete(event);" 
				 wordWrap="true"/>
	
	<mx:Label text="System generated visualization description text:"
			  textAlign="left"/>
	
	<mx:TextArea id="automaticToolDescTextBox" 
				 width="100%" 
				 height="40%" 
				 minWidth="5" 
				 minHeight="5"
				 borderStyle="solid" 
				 editable="false"  
				 keyFocusChange="event.preventDefault(); event.target.replaceSelectedText('\t');"
				 toolTip="changeme"
				 wordWrap="true" text="before button clicked"/>
	
	<mx:Button label="Refresh Description"
			   id="automaticDescRefreshButton" 
			   toolTip="changeme" click="automaticDescRefreshButton_clickHandler(event)"/>
	
	
	<mx:Script>
		<![CDATA[
			import mx.accessibility.CheckBoxAccImpl;
			import mx.binding.utils.BindingUtils;
			import mx.controls.Menu;
			import mx.controls.TextArea;
			import mx.core.IUIComponent;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			import weave.Weave;
			import weave.api.WeaveAPI;
			import weave.api.core.ILinkableObject;
			import weave.api.linkBindableProperty;
			import weave.api.newLinkableChild;
			import weave.api.registerLinkableChild;
			import weave.api.reportError;
			import weave.api.setSessionState;
			import weave.api.ui.ILinkableObjectEditor;
			import weave.api.unlinkBindableProperty;
			import weave.api.unlinkSessionState;
			import weave.core.LinkableString;
			import weave.ui.ControlPanel;
			import weave.ui.DisabilityOptions;
			import weave.ui.DraggablePanel;
			import weave.utils.LinkableTextFormat;
			
			
			
			[Bindable]
			private var _panel:DraggablePanel = null;
			
			public const disabilityText:LinkableString = newLinkableChild(this, LinkableString);
			
			
			
			public function set target(panel:DraggablePanel):void
			{
				if (_panel)
					throw new Error("target should not be set more than once");
				
				_panel = panel;
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				
			}
		
			private function handleCreationComplete(event:Event) : void
			{
				
				Weave.properties.disabilityHashMap.requestObject('text', LinkableString, false);
				var HashDisabilityText : LinkableString = (Weave.properties.disabilityHashMap.renameObject('text', _panel.title) as LinkableString);
				
				if( HashDisabilityText == null)
					reportError("Error Creating request object from Disability Options");
				else
					linkBindableProperty(HashDisabilityText, event.target, "text");
				
			}
			
			protected function automaticDescRefreshButton_clickHandler(event:MouseEvent):void
			{
				automaticToolDescTextBox.text = "after button clicked";
				var dictionaryType:String;
				var vizType:String;
				var rResult:Array;
				rResult = rCall(/*columns???*/)
				vizType = "lineChart";
				dictionaryType = determineDictionaryType(vizType);
		
				determineMessageCategory(dictionaryType, rResult) 
				
			}
			
			protected function determineDictionaryType(vizType:String):String
			{
				return ("lineChartDictionary");
			}
			
			protected function determineMessageCategory(dictionaryType:String, rResult:Array):String
			{
				return ("increasingTrend");
			}
			
			protected function getInfoForR():Array
			{
				//use this function to gather the appropriate information that will be sent to R 
				var sillyArray:Array =[];
				sillyArray = [1, 2, 3];
				return sillyArray;
				
			}
			
			protected function sendStuffToR()
			{
				//send the columns and variables returned from getInfoForR to R using this function
			}
			
			
			
		]]>
	</mx:Script>
</mx:VBox>
