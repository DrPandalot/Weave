<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<DraggablePanel
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns="weave.ui.*"
	layout="absolute"
	title="Add New Data Source"
	borderAlpha="1"
	borderColor="#C5C3A8"
	borderThicknessBottom="0" borderThicknessLeft="5" borderThicknessRight="5" borderThicknessTop="0"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	roundedBottomCorners="true"
	height="564"
	width="184"
	creationComplete="handleDataSelect()">
	
	<mx:HBox height="100%">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.ItemClickEvent;
			import mx.managers.PopUpManager;
			
			import weave.Weave;
			import weave.api.WeaveAPI;
			import weave.api.core.ILinkableObject;
			import weave.api.data.IDataSource;
			import weave.core.SessionManager;
			import weave.data.DataSources.AbstractDataSource;
			import weave.data.DataSources.CSVDataSource;
			import weave.data.DataSources.DBFDataSource;
			import weave.data.DataSources.WFSDataSource;
			import weave.data.DataSources.WeaveDataSource;
			import weave.data.DataSources.XLSDataSource;
			import weave.ui.CustomContextMenuManager;
			import weave.utils.EditorManager;

			{
				EditorManager.registerEditor(WeaveDataSource, WeaveDataSourceEditor);
				EditorManager.registerEditor(WFSDataSource, WFSDataSourceEditor);
				EditorManager.registerEditor(XLSDataSource, XLSDataSourceEditor);
				EditorManager.registerEditor(DBFDataSource, DBFDataSourceEditor);
				EditorManager.registerEditor(CSVDataSource, CSVDataSourceEditor);
			}

			private static var _staticInstance:AddDataSourceComponent = null;
			public static function showAsPopup():void
			{
				_staticInstance = PopUpManager.createPopUp(Application.application as DisplayObject, AddDataSourceComponent, false) as AddDataSourceComponent;
				
				PopUpManager.centerPopUp(_staticInstance);
			}
			
			private var wfsDataSourceEditor:WFSDataSourceEditor = null;
			private var csvDataSourceEditor:CSVDataSourceEditor = null;
			private var dbfDataSourceEditor:DBFDataSourceEditor = null;
			private var xlsDataSourceEditor:XLSDataSourceEditor = null;
			private var weaveDataSourceEditor:WeaveDataSourceEditor = null;
			
			private function handleDataSelect(event:ItemClickEvent=null):void
			{
				switch(dataSourceType.selectedValue){
					case "wfsSource":
						container.removeAllChildren();						
						wfsDataSourceEditor= new WFSDataSourceEditor();
						container.addChild(wfsDataSourceEditor);
						break;
					case "csvSource":
						container.removeAllChildren();			
						csvDataSourceEditor = new CSVDataSourceEditor();
						container.addChild(csvDataSourceEditor);
						break;
					case "dbfSource":
						container.removeAllChildren();			
						dbfDataSourceEditor = new DBFDataSourceEditor();
						container.addChild(dbfDataSourceEditor);
						break;
					case "xlsSource":
						container.removeAllChildren();			
						xlsDataSourceEditor = new XLSDataSourceEditor();
						container.addChild(xlsDataSourceEditor);
						break;
					case "weaveSource":
						container.removeAllChildren();			
						weaveDataSourceEditor = new WeaveDataSourceEditor();
						container.addChild(weaveDataSourceEditor);
						break;
					
				}
			}
			
			//TODO CHeck for emtpy data source,switching between sources needs to be tested, 
			//if source name already exists,feedbadk when object is generated,order of columns
			private function addSource():void
			{
				var checkObj:ILinkableObject = null;
				switch(dataSourceType.selectedValue){
					case "wfsSource":
						if(wfsDataSourceEditor.sourceName.text == "" || wfsDataSourceEditor.url.text == "")
						{
							Alert.show("Please fill all required fields","Error");
							break;
						}
						checkObj = Weave.root.getObject(wfsDataSourceEditor.sourceName.text);
						if(checkObj !=null)
						{
							Alert.show("Source Name already being used. Please give a different name", "Error");
							break;
						}
						var wfsDataSource:WFSDataSource = Weave.root.requestObject(wfsDataSourceEditor.sourceName.text,WFSDataSource,false);
						if(wfsDataSource != null)
							Alert.show("Data Source added successfully");
						wfsDataSource.url.value = wfsDataSourceEditor.url.text;
						break;
					case "csvSource":
						if(csvDataSourceEditor.sourceName.text == "" || (csvDataSourceEditor.url.text == "" && csvDataSourceEditor.csvDataString == "") || csvDataSourceEditor.keyType.text == "")
						{
							Alert.show("Please fill all required fields","Error");
							break;
						}
						checkObj = Weave.root.getObject(csvDataSourceEditor.sourceName.text);
						if(checkObj !=null)
						{
							Alert.show("Source Name already being used. Please give a different name", "Error");
							break;
						}
						var csvDataSource:CSVDataSource = Weave.root.requestObject(csvDataSourceEditor.sourceName.text,CSVDataSource, false);
						if(csvDataSource != null)
							Alert.show("Data Source added successfully");
						csvDataSource.url.value = csvDataSourceEditor.url.text;
						csvDataSource.csvDataString.value = csvDataSourceEditor.csvDataString;
						csvDataSource.keyColName.value = csvDataSourceEditor.keyColumnName.text;
						csvDataSource.keyType.value = csvDataSourceEditor.keyType.text;
						break;
					case "dbfSource":
						if(dbfDataSourceEditor.sourceName.text == "" || dbfDataSourceEditor.dbfURL.text == "")
						{
							Alert.show("Please fill all required fields","Error");
							break;
						}
						checkObj = Weave.root.getObject(dbfDataSourceEditor.sourceName.text);
						if(checkObj !=null)
						{
							Alert.show("Source Name already being used. Please give a different name", "Error");
							break;
						}
						var dbfDataSource:DBFDataSource = Weave.root.requestObject(dbfDataSourceEditor.sourceName.text,DBFDataSource, false);
						if(dbfDataSource != null)
							Alert.show("Data Source added successfully");
						dbfDataSource.dbfUrl.value = dbfDataSourceEditor.dbfURL.text;
						dbfDataSource.shpUrl.value = dbfDataSourceEditor.shpURL.text;
						dbfDataSource.keyColName.value = dbfDataSourceEditor.keyColumnName.text;
						dbfDataSource.keyType.value = dbfDataSourceEditor.keyType.text;
						break;
					case "xlsSource":
						if(xlsDataSourceEditor.sourceName.text == "" || (xlsDataSourceEditor.url.text == "" && xlsDataSourceEditor.xlsFile == null))
						{
							Alert.show("Please fill all required fields","Error");
							break;
						}
						checkObj = Weave.root.getObject(xlsDataSourceEditor.sourceName.text);
						if(checkObj !=null)
						{
							Alert.show("Source Name already being used. Please give a different name", "Error");
							break;
						}
						//if an XLS file has been loaded we create and add it to a CSVDataSource
						if(xlsDataSourceEditor.xlsFile !=null)
						{
							var csvSource:CSVDataSource = Weave.root.requestObject(xlsDataSourceEditor.sourceName.text,CSVDataSource, false);
							if(csvSource != null)
								Alert.show("Data Source added successfully");
							csvSource.url.value = xlsDataSourceEditor.url.text;
							csvSource.csvDataString.value = WeaveAPI.CSVParser.createCSVFromArrays(xlsDataSourceEditor.xlsDataArray);
							csvSource.keyColName.value = xlsDataSourceEditor.keyColumnName.text;
							csvSource.keyType.value = xlsDataSourceEditor.keyType.text;
							break;
						}
						var xlsDataSource:XLSDataSource = Weave.root.requestObject(xlsDataSourceEditor.sourceName.text,XLSDataSource, false);
						if(xlsDataSource != null)
							Alert.show("Data Source added successfully");
						xlsDataSource.url.value = xlsDataSourceEditor.url.text;
						xlsDataSource.keyColName.value = xlsDataSourceEditor.keyColumnName.text;
						xlsDataSource.keyType.value = xlsDataSourceEditor.keyType.text;
						break;
					case "weaveSource":
						if(weaveDataSourceEditor.sourceName.text == "")
						{
							Alert.show("Please fill all required fields","Error");
							break;
						}
						checkObj = Weave.root.getObject(weaveDataSourceEditor.sourceName.text);
						if(checkObj !=null)
						{
							Alert.show("Source Name already being used. Please give a different name", "Error");
							break;
						}
						var weaveDataSource:WeaveDataSource = Weave.root.requestObject(weaveDataSourceEditor.sourceName.text,WeaveDataSource, false);
						if(weaveDataSource != null)
							Alert.show("Data Source added successfully");
						weaveDataSource.url.value = weaveDataSourceEditor.url.text;
						break;
				}
			}
			
		]]>
	</mx:Script>
	<mx:VBox borderThickness="5" borderStyle="solid" borderColor="#C5C3A8" borderSides="right" paddingLeft="5" paddingTop="5" height="100%">
		<mx:RadioButtonGroup id="dataSourceType" itemClick="handleDataSelect(event)"/>
		<mx:RadioButton selected="true" groupName="dataSourceType" id="wfsSource" value="wfsSource" label="WFS Data Source"/>
		<mx:RadioButton groupName="dataSourceType" id="csvSource" value="csvSource" label="CSV Data Source"/>
		<mx:RadioButton groupName="dataSourceType" id="xlsSource" value="xlsSource" label="XLS Data Source"/>
		<mx:RadioButton groupName="dataSourceType" id="dbfSource" value="dbfSource" label="DBF Data Source"/>
		<mx:RadioButton groupName="dataSourceType" id="weaveSource" value="weaveSource" label="Weave Data Source"/>
	</mx:VBox>
	<mx:Box width="100%" height="100%" id="container" cornerRadius="5">
		
	</mx:Box>
</mx:HBox>
	<mx:ControlBar paddingTop="5" paddingBottom="5">
		<mx:Button id="addButton" label="Add this data source" click="addSource()"/>
		<mx:Button id="cancelButton" label="Close" click="removePanel()"/>
	</mx:ControlBar>
</DraggablePanel>