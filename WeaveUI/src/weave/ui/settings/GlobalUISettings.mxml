<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->

<ControlPanel xmlns="weave.ui.*" xmlns:mx="http://www.adobe.com/2006/mxml"
			  xmlns:settings="weave.ui.settings.*" 
			  width="625" 
			  height="315"
			  backgroundColor="#EFF4BC"
			  title="User Interface Preferences"
			  targets="{[Weave.properties]}"
			  >
	
	<!-- 
	<mx:Tree id="myTree" 
		width="30%" 
		height="100%" 
		labelField="@label"
		showRoot="false" 
		dataProvider="{treeData}" 
		change="treeChanged(event)"
		allowMultipleSelection="false" 
		allowDragSelection="false" 
		backgroundColor="0xCCCCCC"
		backgroundAlpha="0.5"/>
	<mx:XMLList id="treeData">
		<node label="User Preferences">
			<node label="Application Settings">
				<node label="Appearance"/>
				<node label="Interactivity"/>
				<node label="Main Toolbar"/>
				<node label="Probing"/>
			</node>
		</node>    
	</mx:XMLList>
	-->
	
	<settings:AppearancesSubMenu label="Appearance"/>
	<settings:Main_ToolbarSubMenu label="Menus"/>
	<settings:InteractivitySubMenu label="Interactivity"/>
	<settings:ProbingSubMenu label="Probing"/>
	<settings:SelectionSubMenu label="Selection"/>
	
	<mx:Script>
		<![CDATA[
			import mx.containers.Panel;
			import weave.ui.DraggablePanel;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.core.Container;
			import mx.events.FlexEvent;
			
			import weave.Weave;
			import weave.WeaveProperties;
			import weave.core.SessionManager;
			
			[Bindable]
			public var adminUser:Boolean;
			
			private static var globalEditor:ControlPanel;
			
			/**
			 * Opens a static instance of the User Preferences Panel and adds it to the stage as a PopUp
			 */
			public static function openGlobalEditor():void
			{
				if (!globalEditor)
					globalEditor = new GlobalUISettings();
				
				if (!globalEditor.parent)
					PopUpManager.addPopUp(globalEditor, Application.application as Application);
				globalEditor.restorePanel();
			}
			
			/*//function to switch between Admin and notAdmin views for any node in the treeview
			//			public function setAdminUser(user:Boolean):void 
			//			{
			//				adminUser = user;
			//				if(adminUser){
			//					if(vs1.selectedChild==Appearances)
			//						Appearances.appearances.selectedChild=Container(Appearances.admin);
			//					if(vs1.selectedChild==Interactivity)
			//						Interactivity.interactivity.selectedChild=Container(Interactivity.admin);
			//				} else{
			//					if(vs1.selectedChild==Appearances)
			//						Appearances.appearances.selectedChild=Container(Appearances.notadmin);
			//					if(vs1.selectedChild==Interactivity)
			//						Interactivity.interactivity.selectedChild=Container(Interactivity.notadmin);
			//				}
			//				
			//				if(vs1.selectedChild==Main_Toolbar){
			//					Main_Toolbar.menu.enabled=!adminUser;
			//					Main_Toolbar.top.enabled=!adminUser;
			//					Main_Toolbar.bottom.enabled=!adminUser;
			//				}
			//				
			//			}
			
			[Bindable]
			public var selectedNode:XML;
			
			// Event handler for the Tree control change event.
			public function treeChanged(event:Event):void {
			try{	
			selectedNode=Tree(event.target).selectedItem as XML;
			vs1.selectedChild = Container(vs1.getChildByName(stripSpaces(myTree.itemToLabel(selectedNode.@label.toString())))); 
			}catch(e:Error){
			}
			}
			
			private function stripSpaces(originalstring:String):String
			{
				var original:Array=originalstring.split(" ");
				return(original.join("_"));
			}*/
			
		]]>
	</mx:Script>
</ControlPanel>
