<?xml version="1.0" encoding="utf-8"?>
<ui:DraggablePanel xmlns:mx="http://www.adobe.com/2006/mxml"
				   xmlns:ui="weave.ui.*"
				   width="400" height="300" layout="absolute"
				   resize="draggablepanel1_resizeHandler(event)" title="Document Viewer"
				   creationComplete="handleCreationComplete(event)">
	<mx:Script>
		<![CDATA[
			import mx.containers.Canvas;
			import mx.effects.Move;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import weave.Weave;
			import weave.WeaveProperties;
			import weave.api.WeaveAPI;
			import weave.api.data.IDataRowSource;
			import weave.api.registerLinkableChild;
			import weave.api.reportError;
			import weave.data.DataSources.WeaveDataSource;
			import weave.services.AMF3Servlet;
			import weave.services.addAsyncResponder;
			
			private var _pdfFile:FileReference = new FileReference();
			private var _pdfLoader:URLLoader = new URLLoader();
			private var isURL:Boolean = false;
			//Re-useable movieclip object for the converted pdf.
			private var swfMovieClip:MovieClip = new MovieClip;
			
			
			protected function handleCreationComplete(event:FlexEvent):void
			{
				_pdfFile.addEventListener(Event.SELECT, pdfFileSelectedHandler);
				_pdfFile.addEventListener(ProgressEvent.PROGRESS, handleProgress);
				_pdfFile.addEventListener(Event.COMPLETE, pdfFileLoadCompleteHandler);
				_pdfFile.addEventListener(IOErrorEvent.IO_ERROR, fileErrorHandler);
			}
			
			private function pdfFileSelectedHandler(event:Event):void
			{
				if( swfLoader.content != null )
				{
					swfLoader.unload();
					this.rawChildren.removeChild(swfMovieClip);
					swfMovieClip = new MovieClip();
				}
				_pdfFile.load();
				WeaveAPI.ProgressIndicator.addTask(_pdfFile);
			}
			
			private function handleProgress(event:ProgressEvent):void
			{
				WeaveAPI.ProgressIndicator.updateTask(_pdfFile, event.bytesLoaded / event.bytesTotal);
			}
			
			private var _servlet:AMF3Servlet = null;
			
			private function pdfFileLoadCompleteHandler(event:Event):void
			{
				WeaveAPI.ProgressIndicator.removeTask(_pdfFile);
				if (_pdfFile.data == null)
				{
					return;
				}
				
				_servlet = new AMF3Servlet(serverIP.text + "WeaveServices/DataService");
				registerLinkableChild(this, _servlet);
				
				pdfSelected.text = _pdfFile.name;
				
				isURL = false;
				
				var token:AsyncToken = _servlet.invokeAsyncMethod("convertPDF",[_pdfFile.name,_pdfFile.data]);
				addAsyncResponder(token, handleServletResponse, handleServletError, token);
			}
			
			var swfLoader:Loader = new Loader();
			
			private function handleServletResponse(event:ResultEvent, token:Object = null):void
			{
				if( isURL )
				{
					var getSWFLink:URLRequest = new URLRequest(serverIP.text + pdfURL.text.substring(pdfURL.text.lastIndexOf("/"),pdfURL.text.lastIndexOf(".")) + ".swf");
					trace( serverIP.text + pdfURL.text.substring(pdfURL.text.lastIndexOf("/"),pdfURL.text.lastIndexOf(".")) + ".swf");
				}
				else
				{
					var getSWFLink:URLRequest = new URLRequest(serverIP.text + _pdfFile.name.substr(0,_pdfFile.name.lastIndexOf(".")) + ".swf");
					trace( serverIP.text + _pdfFile.name.substr(0,_pdfFile.name.lastIndexOf(".")) + ".swf" );
				}
				swfLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, handleSWFDownload);
				swfLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, progress);
				swfLoader.load(getSWFLink);
				trace(event.message);
				trace(event.result);
				trace(token);
			}
			
			private function progress(e:ProgressEvent):void
			{
				trace(e.bytesLoaded / e.bytesTotal);
			}
			
			private function handleSWFDownload(e:Event):void
			{
				swfMovieClip = e.currentTarget.content;
				
				swfMovieClip.x = this.borderMetrics.left;
				swfMovieClip.y = this.borderMetrics.top;
				swfMovieClip.width = (this.width - this.borderMetrics.left - this.borderMetrics.right );
				swfMovieClip.height = (this.height - this.borderMetrics.top - this.borderMetrics.bottom);
				this.rawChildren.addChild(swfMovieClip);
			}
			
			private function handleServletError(event:FaultEvent, token:Object = null):void
			{
				reportError(event);
			}
			
			private function fileErrorHandler(event:IOErrorEvent):void
			{
				reportError(event);
			}
			
			protected function draggablepanel1_resizeHandler(event:ResizeEvent):void
			{
				swfMovieClip.width = (this.width - this.borderMetrics.left - this.borderMetrics.right );
				swfMovieClip.height = (this.height - this.borderMetrics.top - this.borderMetrics.bottom);
				this.invalidateDisplayList();
			}
			
			protected function selectPDFButton(event:MouseEvent):void
			{
				try
				{
					var fileTypes:Array = [new FileFilter("PDF Files", "*.pdf")];
					_pdfFile.browse(fileTypes);
				}
				catch(e:Error)
				{
					reportError(e);
				}
				
			}
			
			protected function loadPDF(event:MouseEvent):void
			{
				if( swfLoader.content != null )
				{
					swfLoader.unload();
					this.rawChildren.removeChild(swfMovieClip);
					swfMovieClip = new MovieClip();
				}
				
				var url:URLRequest = new URLRequest(pdfURL.text); 
				_pdfLoader.dataFormat = URLLoaderDataFormat.BINARY;				
				_pdfLoader.addEventListener(Event.COMPLETE, loaderOnComplete);
				_pdfLoader.addEventListener(IOErrorEvent.IO_ERROR, fileErrorHandler);
				_pdfLoader.load(url); 
			}
			
			private function loaderOnComplete(event:Event):void
			{
				if (_pdfLoader.data == null)
				{
					return;
				}
				
				_servlet = new AMF3Servlet(serverIP.text + "WeaveServices/DataService");
				registerLinkableChild(this, _servlet);
				
				//get filename.
				
				isURL = true;
				
				var token:AsyncToken = _servlet.invokeAsyncMethod("convertPDF",[pdfURL.text.substring(pdfURL.text.lastIndexOf("/")),_pdfLoader.data]);
				addAsyncResponder(token, handleServletResponse, handleServletError, token);
			
			}
			
		]]>
	</mx:Script>
	
	<ui:ControlPanel>
		<mx:VBox>
			<mx:HBox>
				<mx:Label text="Server IP:"/>
				<mx:TextInput id="serverIP" text="http://localhost:8080/"/>
			</mx:HBox>
			<mx:HBox>
				<mx:Label text="Enter URL of PDF:"/>
				<mx:TextInput id="pdfURL"/>
				<mx:Button label="Load" click="loadPDF(event)"/>
			</mx:HBox>
			<mx:HBox>
				<mx:Label text="---  OR  ---"/>
			</mx:HBox>
			<mx:HBox>
				<mx:Label text="Select PDF file:"/>
				<ui:TextInputWithPrompt id="pdfSelected" prompt="{lang('Select a CSV file.')}" />
				<mx:Button label="Load PDF"  click="selectPDFButton(event)"/>
			</mx:HBox>
		</mx:VBox>
	</ui:ControlPanel>
</ui:DraggablePanel>
