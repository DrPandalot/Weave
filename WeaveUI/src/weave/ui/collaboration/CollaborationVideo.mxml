<?xml version="1.0" encoding="utf-8"?>
<!--
Weave (Web-based Analysis and Visualization Environment)
Copyright (C) 2008-2011 University of Massachusetts Lowell

This file is a part of Weave.

Weave is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License, Version 3,
as published by the Free Software Foundation.

Weave is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Weave.  If not, see <http://www.gnu.org/licenses/>.
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:ui="weave.ui.*"
		 creationComplete="creationCompleteHandler(event)" creationPolicy="all"
		 horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:VBox width="100%" height="100%" horizontalScrollPolicy="off" verticalGap="3"
			 verticalScrollPolicy="off">
		<mx:Canvas id="borderCanvas" borderColor="0x54585E" borderStyle="solid"
				   borderThickness="{_borderThickness}">
			<mx:UIComponent id="holder" width="100%" height="100%"/>
		</mx:Canvas>
		<ui:Center>
			<mx:Label id="nameLabel" text="{nickname}"/>
		</ui:Center>
	</mx:VBox>
	
	<mx:Move id="moveEffect" duration="600"/>
	
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			public var stream:NetStream;
			public var video:Video;
			private const _borderThickness:Number = 4;
			[Bindable] public var nickname:String;
			
			private function creationCompleteHandler(event:FlexEvent):void
			{
				holder.addChild(video);
				borderCanvas.width = video.width + 2*_borderThickness;
				borderCanvas.height = video.height + 2*_borderThickness;
//				nameLabel.text = nickname;
			}
			public function play(str:String):void
			{
				stream.play(str);
				video.attachNetStream(stream);
			}
			public function close():void
			{
				video.attachNetStream(null);
				video.clear();
				stream.close();
				holder.removeChild(video);
			}
			public function setPos(x:Number, y:Number, showEffect:Boolean = false):void
			{
				if( showEffect )
				{
					moveEffect.stop();
					moveEffect.xFrom = this.x;
					moveEffect.xTo	 = x;
					moveEffect.yFrom = this.y;
					moveEffect.yTo	 = y;
					moveEffect.play([this]);
				}
				else
				{
					this.x = x;
					this.y = y;
				}
			}
			public function setSize(width:Number, showEffect:Boolean = false):void
			{
				var height:Number = 3 * width / 4;
				
				video.width = width;
				video.height = height;
				borderCanvas.width = video.width + 2*_borderThickness;
				borderCanvas.height = video.height + 2*_borderThickness;
//				this.width  = width  + 2*_borderThickness;
//				this.height = height + 2*_borderThickness + nameLabel.height + 3;
			}
		]]>
	</mx:Script>
</mx:VBox>
