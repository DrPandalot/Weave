<?xml version="1.0" encoding="utf-8"?>
<!--
/*
Weave (Web-based Analysis and Visualization Environment)
Copyright (C) 2008-2011 University of Massachusetts Lowell

This file is a part of Weave.

Weave is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License, Version 3,
as published by the Free Software Foundation.

Weave is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->

<!---
@author fkamayou
@author mervetuccar
@author hbyrne
-->

<ControlPanel xmlns="weave.ui.*"
			  xmlns:mx="http://www.adobe.com/2006/mxml"
			  width="400" height="400" backgroundColor="#EFF4BC" horizontalScrollPolicy="off"
			  title="Accessibility Options" verticalScrollPolicy="off">
	<mx:HDividedBox id="accessibilityOptions" width="100%" height="100%">
		<mx:TabNavigator width="100%" height="100%" borderStyle="inset">
			<mx:HBox width="100%" height="100%" label="Alt Text" horizontalAlign="left"
					 verticalAlign="top">
				<mx:VBox width="100%" height="100%" horizontalAlign="left">
					<mx:Label text="Short Description:"/>
					<mx:TextArea id="generalDescriptionTextArea" width="100%" height="20%"
								 editable="true" 
								 creationComplete="linkBindableProperty(Weave.properties.altTextOptions.shortDescription, event.target, 'text')"
								 toolTip="Short description for the dashboard."/>
					<CheckBoxList id="VisCheckboxes" width="100%" height="100%"
								  creationComplete="linkBindableProperty(Weave.properties.altTextOptions.visTools, event.target, 'selectedItems')"/>
				</mx:VBox>
				<mx:VBox width="100%" height="100%" horizontalAlign="left">
					<mx:Label text="Complete Alt Text:"/>
					<mx:TextArea id="AltTextTextArea" width="100%" height="100%"
								 backgroundColor="#EEEEEE" editable="false" 
								 creationComplete="linkBindableProperty(Weave.properties.altTextOptions.altText, event.target, 'text')"
								 toolTip="This is the text that will be available for accessibility."/>
				</mx:VBox>
			</mx:HBox>
			
			<mx:Script>
				<![CDATA[
					import flash.external.ExternalInterface;
					
					import mx.accessibility.CheckBoxAccImpl;
					import mx.controls.CheckBox;
					import mx.controls.ComboBox;
					import mx.controls.List;
					import mx.controls.Menu;
					import mx.controls.TextArea;
					import mx.controls.TextInput;
					import mx.core.IUIComponent;
					import mx.events.DragEvent;
					import mx.events.FlexEvent;
					import mx.managers.DragManager;
					
					import weave.Weave;
					import weave.WeaveProperties;
					import weave.api.core.IDisposableObject;
					import weave.api.core.ILinkableObject;
					import weave.api.detectLinkableObjectChange;
					import weave.api.linkBindableProperty;
					import weave.api.linkSessionState;
					import weave.api.newDisposableChild;
					import weave.api.newLinkableChild;
					import weave.api.registerLinkableChild;
					import weave.api.reportError;
					import weave.api.ui.IAltText;
					import weave.api.ui.ILinkableObjectEditor;
					import weave.core.LinkableBoolean;
					import weave.core.LinkableHashMap;
					import weave.core.LinkableString;
					import weave.core.LinkableVariable;
					import weave.core.SessionManager;
					import weave.editors.AltTextEditor;
					import weave.ui.ControlPanel;
					import weave.ui.SessionStateEditor;
					import weave.visualization.tools.SimpleVisTool;							
					
					private const padding:int = 10;
					
					override protected function inConstructor():void
					{
						super.inConstructor();
						WeaveAPI.globalHashMap.childListCallbacks.addGroupedCallback(this, setVisTools, true);
						panelWidth.value = "70%";
						panelHeight.value = "70%";
						panelX.value = "15%";
						panelY.value = "15%";
						
					}
				
					override protected function childrenCreated():void
					{
						super.childrenCreated();
						Weave.properties.altTextOptions.shortDescription.addImmediateCallback(this, updateAltText);
						Weave.properties.altTextOptions.visTools.addImmediateCallback(this, updateAltText);
						targets = [Weave.properties.altTextOptions];
					}
				
					private function setVisTools() : void
					{
						VisCheckboxes.dataProvider = WeaveAPI.globalHashMap.getNames(IAltText);
					}
					
					public function updateAltText():void
					{
						Weave.properties.altTextOptions.altText.value = Weave.properties.altTextOptions.shortDescription.value + "\n\n";
						for each(var toolName:String in Weave.properties.altTextOptions.visTools.getSessionState() as Array)
						{
							var tool:SimpleVisTool = WeaveAPI.globalHashMap.getObject(toolName) as SimpleVisTool;
							if(tool)
								Weave.properties.altTextOptions.altText.value += tool.altTextEditor.toolDescription.value + "\n";
						}

						ExternalInterface.call("function(altText) { " +
							"var weaveAltImg = document.getElementById(\"weaveAltImg\"); " +
							"if(weaveAltImg) " +
							"weaveAltImg.alt = altText;" +
							"}",
							Weave.properties.altTextOptions.altText.value
						);
					}
				]]>
			</mx:Script>	
		</mx:TabNavigator>
	</mx:HDividedBox>
</ControlPanel>