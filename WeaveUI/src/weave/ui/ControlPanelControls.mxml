<?xml version="1.0" encoding="utf-8"?>
<!--
/*
Weave (Web-based Analysis and Visualization Environment)
Copyright (C) 2008-2011 University of Massachusetts Lowell

This file is a part of Weave.

Weave is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License, Version 3,
as published by the Free Software Foundation.

Weave is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"  
		  xmlns="weave.ui.*" 
		  width="100%" height="100%"
		  paddingLeft="{padding}" paddingRight="{padding}" paddingTop="{padding}" paddingBottom="{padding}">

	<s:Scroller  verticalScrollPolicy="auto" width="100%" height="100%">
		<s:Group>
			<mx:TabNavigator id="tabNavigator"
							 width="100%" height="100%" minHeight="25"
							 childAdd="handleChildAdded()"
							 />
			
		</s:Group>
	</s:Scroller>
	<s:HGroup width="100%" id="buttons">
		<s:Button id="revertBtn" label="{lang('Revert')}"  toolTip="{lang('Revert to last saved state')}" cornerRadius="2"/> 
		<s:Button id="cancelBtn" label="{lang('Cancel')}" toolTip="{lang('Revert to last saved state and close this window')}" cornerRadius="2" />
		<s:Spacer width="100%" minWidth="0"/>
		<BusyIndicator id="busyIndicator" visible="true" includeInLayout="true" diameterRatio=".75" targets="{_busyIndicatorTargets}"/>
		<s:Spacer width="100%" minWidth="0"/>
		<s:Button id="saveBtn" label="{lang('Save')}"  toolTip="{lang('Create a save point you can revert to')}" cornerRadius="2"/>
		<s:Button id="saveCloseBtn" label="{lang('Save &amp; Close')}"  toolTip="{lang('Commit all changes and close this window')}" cornerRadius="2"/>
	</s:HGroup>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.TabBar;
			import mx.core.mx_internal;
			private const padding:int = 5;
			private const innerPadding:int = 8;
			
			[Bindable] private var _busyIndicatorTargets:Array;
			public function set busyIndicatorTargets(value:Array):void
			{
				_busyIndicatorTargets = value;
			}
			
			private function handleChildAdded():void
			{
				var show:Boolean = (tabNavigator.numElements != 1);
				tabNavigator.mx_internal::getTabBar().visible = show;
				tabNavigator.setStyle('borderStyle', show ? 'outset' : 'none');
				tabNavigator.setStyle('backgroundAlpha', show ? 1.0 : 0.0);
				tabNavigator.setStyle('tabHeight', show ? NaN : 0);
				for each (var padName:String in ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'])
				tabNavigator.setStyle(padName, show ? innerPadding : 0);
			} 
		]]>
	</fx:Script>
</s:VGroup>