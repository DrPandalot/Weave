<?xml version="1.0" encoding="utf-8"?>
<mx:List xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ui="weave.ui.infomap.ui.*" 
		 allowMultipleSelection="true"
		 doubleClickEnabled="true" mouseDown="handleMouseDown(event)" mouseMove="handleMouseMove(event)" toolTip="" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			private function handleMouseDown(event:MouseEvent):void {
				//we don't want selection rectangle to be drawn when mouse is down on list.
				event.stopPropagation();
			}
			
			private function handleMouseMove(event:MouseEvent):void {
				//we don't want selection rectangle to be drawn when mouse is down on list.
				event.stopImmediatePropagation();
			}
		]]>
	</mx:Script>
	<mx:itemRenderer>
		<mx:Component>
			<ui:CustomLabelTextField doubleClick="handleItemDoubleClick(event)" mouseOut="handleItemRollOut(event)" mouseOver="handleItemRollOver(event)" toolTip="" width="100%">
				
				<mx:Script>
					<![CDATA[
						import weave.api.WeaveAPI;
						import weave.api.data.IQualifiedKey;
						import weave.core.StageUtils;
						import weave.data.DataSources.GoogleSearchDataSource;
						import weave.utils.CustomCursorManager;
						import weave.visualization.layers.InteractiveVisualization;
						
						private var googleSearchDataSource:GoogleSearchDataSource = WeaveAPI.globalHashMap.getObject(GoogleSearchDataSource.SOURCE_NAME) as GoogleSearchDataSource;
						
						override protected function childrenCreated():void {
							googleSearchDataSource.getColumnByName("title").addImmediateCallback(outerDocument, updateLabelText);
							googleSearchDataSource.getColumnByName("snippest").addImmediateCallback(outerDocument, updateLabelText);
						}
						
						private function updateLabelText():void {
							//the list was blinking because the label used to be set from empty to the text again because
							//the column is busy still getting the data
							//so we test it to only update the labels when it has the data. 
							if(WeaveAPI.SessionManager.linkableObjectIsBusy(googleSearchDataSource.getColumnByName("title")) || WeaveAPI.SessionManager.linkableObjectIsBusy(googleSearchDataSource.getColumnByName("snippest")))
								return;
							if(data != null) {
								this.text = googleSearchDataSource.getTitleForURL(data.localName);
							}
						}
						
						override public function set data(value:Object):void
						{
							super.data = value;
							if(value == null)
								return;
							
							// ToDo Is this code necessary?
							this.text = googleSearchDataSource.getTitleForURL(data.localName);
						}
						
						private function handleItemDoubleClick(event:MouseEvent):void {
							var link:String = data.localName;
							navigateToURL(new URLRequest(link));
						}
						
						private var cursorID:int = -1;
						private var stageUtils:StageUtils = new StageUtils();
						private function handleItemRollOver(event:MouseEvent):void
						{
							cursorID = CustomCursorManager.showCursor(InteractiveVisualization.CURSOR_LINK);
							
							if(!stageUtils.mouseButtonDown)
								this.toolTip = googleSearchDataSource.getSnippestForURL(data.localName);
						}
						private function handleItemRollOut(event:MouseEvent):void
						{
							CustomCursorManager.removeCursor(cursorID);
							this.toolTip = "";
						}
					]]>
				</mx:Script>
			</ui:CustomLabelTextField>
		</mx:Component>
	</mx:itemRenderer>
</mx:List>
