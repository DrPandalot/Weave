<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
		 xmlns="weave.ui.controlBars.*"
		 xmlns:ui="weave.ui.*"
	     width="100%"
    	 backgroundColor="0x8a8a8a" backgroundAlpha="1.0"
    	 verticalAlign="middle"
	     styleName="weave-menu-bar-style"
	     horizontalScrollPolicy="off"
		 verticalScrollPolicy="off"
		 >
	<!--
		TODO:
		This class needs to be rewritten.
		The item renderers that get generated by this menubar are NOT the
		same WeaveMenuItem objects that appear in the dataProvider.
	-->
	<CustomMenuBar id="menubar"
				change="(event.item as WeaveMenuItem).runClickFunction()"
				height="24"
				width="100%"
				dataProvider="{getMenuChildren(rootMenuItem)}"
				labelFunction="{trimLabel}"
				menuStyleName="weave-menu-style"
				styleName="weave-menu-bar-style"
				/>
	<mx:Style>
		.weave-menu-style {
			color: #000000;
			selectionColor: #F8A4FB;
			textRollOverColor: #FFFFFF;
			textSelectedColor: #000000;
			openDuration: 0;
			padding-left: 0;
			padding-right: 0;
			padding-top: 0;
			padding-bottom: 0;
			
		}
		
		.weave-menu-bar-style {
			rollOverColor: #88A4DB;
			selectionColor: #F8A4FB;
			fontFamily: Arial;
			fontWeight: bold;
			padding-left: 0;
			padding-right: 0;
			padding-top: 0;
			padding-bottom: 0;
			highlightAlphas: 0, 0;
   			fillAlphas: 1, 1;
   			button-style-name: "weave-menu-bar-button-style";
   			
		}
		
		.weave-menu-bar-button-style {
			cornerRadius: 0;
			paddingLeft: 0;
			paddingRight: 0;
			paddingTop: 0;
			paddingBottom: 0;
		}
		.menu-button-style {
			padding-left: 0;
			padding-right: 0;
			padding-top: 2;
			padding-bottom: 2;
			corner-radius: 0;
			fill-alphas: 1, 1;
			fill-colors: #dadada, #dadada;
		}
	</mx:Style>
	 <mx:HBox  id="logoParentHBox" verticalAlign="middle" right="{menubar.getStyle('cornerRadius') + 3}" top="{(menubar.height) / 2}">
	 	<ui:WeaveCopyrightPane id="oicLogo"/>
	 </mx:HBox>       
	

    <mx:Script>
    	<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.core.mx_internal;
			
			import weave.Weave;
			import weave.menus.DataMenu;
			import weave.menus.HelpMenu;
			import weave.menus.SelectionsMenu;
			import weave.menus.SessionMenu;
			import weave.menus.SubsetsMenu;
			import weave.menus.ToolsMenu;
			import weave.menus.WeaveMenuItem;
			import weave.menus.WindowMenu;
			import weave.ui.WeaveCopyrightPane;
			
			use namespace mx_internal;
			
			private const _dataProvider:ArrayCollection = new ArrayCollection();
			
			override protected function createChildren():void
			{
				super.createChildren();
				
				Weave.properties.showCopyright.addGroupedCallback(this, addLogo, true);
				rootMenuItem = new WeaveMenuItem({
					children: defaultMenus
				});
			}
			
			public static const defaultMenus:Array = WeaveMenuItem.createItems([
				SessionMenu,
				DataMenu,
				ToolsMenu,
				SelectionsMenu,
				SubsetsMenu,
				WindowMenu,
				HelpMenu
			]);
			
			public var maxLabelLength:int = 75;
			private function trimLabel(item:WeaveMenuItem):String
			{
				var str:String = item.label || '';
				if (str.length > maxLabelLength)
					str = str.substr(0, maxLabelLength) + "...";
				return str;
			}
			
			private function addLogo():void
			{
				if (!parent)
					return callLater(addLogo);
				
				if (Weave.properties.showCopyright.value)
					addChild(logoParentHBox);
				else if (this == logoParentHBox.parent)
					removeChild(logoParentHBox);
			}
			
			private var _rootMenuItem:WeaveMenuItem;
			
			/**
			 * This is the dataProvider for the menubar.
			 */
			[Bindable] public function get rootMenuItem():WeaveMenuItem
			{
				return _rootMenuItem;
			}
			/**
			 * Sets the dataProvider for the menubar.
			 * @param menu Either a WeaveMenuItem or an Object to be passed to the WeaveMenuItem constructor.
			 */
			public function set rootMenuItem(menu:*):void
			{
				_rootMenuItem = menu as WeaveMenuItem || new WeaveMenuItem(menu);
			}
			
			private function getMenuChildren(menu:WeaveMenuItem):Array
			{
				return menu ? menu.children : null;
			}
			
			/**
			 * Refreshes the menubar.
			 */
			public function refresh():void
			{
				menubar.dataProvider = getMenuChildren(_rootMenuItem);
			}
    	]]>
    </mx:Script>
</mx:HBox>
