<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<!--	Session States Display
*  @author jfallon
*  A display that shows all the saved Session States.
-->

<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="619" height="500" title="Session States Display"
		  headerHeight="15" 
		  borderThicknessBottom="5" borderThicknessTop="5" borderThicknessLeft="5" borderThicknessRight="5"
		  backgroundAlpha="0.8" backgroundColor="black"
		  xmlns:ui="weave.ui.*" xmlns:controlBars="weave.ui.controlBars.*">
	
	
	<mx:Script>
		<![CDATA[
			import weave.api.setSessionState;
			import mx.core.Application;
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.containers.VBox;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.core.IFlexDisplayObject;
			import mx.effects.Resize;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import weave.Weave;
			import weave.WeaveProperties;
			import weave.core.DynamicState;
			import weave.core.SessionManager;
			import weave.core.WeaveXMLDecoder;
			import weave.core.WeaveXMLEncoder;
			import weave.core.weave_internal;
			import weave.utils.DebugUtils;
			import weave.utils.EventUtils;
			import weave.utils.NumberUtils;
			import weave.utils.VectorUtils;
			use namespace weave_internal;
			
			private static var _staticState:SessionStatesDisplay = null;
			private static var allStates:Array = null;
			
			public function applyState():void
			{
				var num:int = myList.selectedIndex;
				
				if( num != -1 && allStates.length > 0 )
					setSessionState( Weave.root, ( allStates[num] as DynamicState ).sessionState, true );
			
				myList.dataProvider.refresh();
				validateNow();
			}
			
			public function removeState():void{
				
				var num:int = myList.selectedIndex;
				
				if( num != -1 && allStates.length > 0 )
					allStates.splice( num, 1 );
				
				myList.dataProvider.refresh();
				validateNow();				
			}
			
			public static function openDefaultEditor( states:Array ):void{
				
				_staticState = PopUpManager.createPopUp(Application.application as DisplayObject, SessionStatesDisplay, false ) as SessionStatesDisplay;
				_staticState.height = 0.5 * Application.application.height;
				_staticState.width = 0.5 * Application.application.width;				
				
				PopUpManager.centerPopUp(_staticState);
				
				allStates = states;
				
				_staticState.myList.dataProvider = allStates as Object;
				
			}
			
			
			protected function cancel():void
			{
				PopUpManager.removePopUp( this );
			}
			
			private function myLabelFunction(item:Object):String
			{
				// append class name to the label.
				return ( item as DynamicState ).objectName;
			}
			
		]]>
	</mx:Script>
	<mx:HBox height="28" width="100%" backgroundColor="white" >
		<mx:Button id="canc" label="Cancel" click="cancel()"  width="85" height="25"/>
		<mx:Button id="apply" label="Apply State" click="applyState()"  width="96" height="25"/>
		<mx:Button id="remove" label="Remove State" click="removeState()" width="106" height="25"/>
	</mx:HBox>
	<mx:List id="myList" width="100%" height="100%" x="0" y="28" labelFunction="{myLabelFunction}" horizontalScrollPolicy="auto" verticalScrollPolicy="auto"/>
</mx:Panel>