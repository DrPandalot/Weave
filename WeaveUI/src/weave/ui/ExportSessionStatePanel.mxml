<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<ui:DraggablePanel xmlns="weave.ui.settings.*" 
				   xmlns:mx="http://www.adobe.com/2006/mxml" 
				   xmlns:ui="weave.ui.*" 
				   sessionPanelCoordsAsPercentages="false"
				   minWidth="300"
				   percentWidth="NaN" percentHeight="NaN"
				   title="Export Session State"
				   >
	<mx:VBox paddingLeft="{padding}" paddingRight="{padding}" paddingTop="{padding}" paddingBottom="{padding}">
		<mx:Label text="Choose Options"/>
		<mx:CheckBox label="Dashboard mode" toolTip="Check this box to show all windows in 'dashboard' mode. Enabling this will hide borders around the tool, hide the bar on the top of the tool, and not allow the tool to be dragged, minimized, maximized, closed, or any other function accessed from the top of the panel."
					 creationComplete="linkBindableProperty(Weave.properties.dashboardMode, event.target, 'selected');"/>
		<mx:CheckBox label="Show Menubar" toolTip="Check this box to show the top menu bar."
					 creationComplete="linkBindableProperty(Weave.properties.enableMenuBar, event.target, 'selected')"/>
		<mx:CheckBox label="Show copyright"
					 creationComplete="linkBindableProperty(Weave.properties.showCopyright, event.target, 'selected');"/>
		<mx:CheckBox id="saveHistoryCheckBox"
					 label="Save history"
					 selected="false"
					 visible="false"/>
	</mx:VBox>
	<mx:ControlBar>
		<mx:Button label="Export" 
				   click="export()" 
				   toolTip="Export session with these options"/>
		<mx:Button label="Cancel" 
				   click="removePanel()"
				   toolTip="Cancel"/>
	</mx:ControlBar>
	<mx:Script>
		<![CDATA[
			import weave.Weave;
			import weave.api.WeaveFileFormat;
			import weave.api.linkBindableProperty;
			import weave.core.LinkableBoolean;
			import weave.core.SessionManager;
			import weave.core.SessionStateLog;
			import weave.editors.SessionHistorySlider;
			
			private const padding:Number = 5;
			
			private var oldValues:Dictionary = new Dictionary(true);
			
			override protected function constructor():void
			{
				super.constructor();
				
				for each (var lb:LinkableBoolean in [
					Weave.properties.dashboardMode,
					Weave.properties.enableMenuBar,
					Weave.properties.showCopyright
				])
					oldValues[lb] = lb.value;
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				
				saveHistoryCheckBox.visible = Weave.history.enableLogging && SessionHistorySlider.devMode;
			}
			
			private function export():void
			{
				// Create a date that we can append to the end of each file to make them unique
				var date:Date = new Date();
				var dateString:String = date.fullYear +"."+ date.month +"."+ date.day +" "+ date.time;
				
				var fr:FileReference = new FileReference();
				if (saveHistoryCheckBox.selected)
				{
					var content:Object = Weave.createWeaveFileContent();
					var byteArray:ByteArray = WeaveFileFormat.createFile(content);
					fr.save(byteArray, "weave session history " + dateString + ".weave");
				}
				else
				{
					fr.save(Weave.getSessionStateXML(), "weave session state " + dateString + ".xml");
				}
				
				removePanel();
			}
			
			override public function removePanel():void
			{
				super.removePanel();
				
				// restore settings
				for (var lb:* in oldValues)
					(lb as LinkableBoolean).value = oldValues[lb];
			}
		]]>
	</mx:Script>
</ui:DraggablePanel>
