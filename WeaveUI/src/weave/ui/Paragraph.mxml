<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:TextArea xmlns="weave.ui.*" xmlns:mx="http://www.adobe.com/2006/mxml"
    verticalScrollPolicy="off" horizontalScrollPolicy="off"
    resize="resetHeight()"
    change="resetHeight()"
	editable="false"
	borderStyle="none"
	width="100%"
	wordWrap="true"
	backgroundAlpha="0"
	selectable="false"
	focusEnabled="false"
    >
	<mx:Metadata>
		[DefaultProperty("content")]
	</mx:Metadata>
    <mx:Script>
        <![CDATA[
			import mx.utils.StringUtil;
			
			import weave.compiler.StandardLib;
			
			private var _untranslated:String = '';
			private var _trim:Boolean = true;
			private var _translate:Boolean = false;
			
			/**
			 * Setting this to true will remove all tab characters and replace new lines with spaces.
			 */
			public function set trim(value:Boolean):void
			{
				if (_trim != value)
				{
					_trim = value;
					text = _untranslated;
				}
			}
			
			/**
			 * Setting this to true will automatically call lang() whenever the text is set.
			 */
			public function set translate(value:Boolean):void
			{
				if (_translate != value)
				{
					_translate = value;
					text = _untranslated;
				}
			}
			
			[Exclude]
			public function set content(value:*):void
			{
				text = value as String;
			}
			
			override public function set text(value:String):void
			{
				value = value || ''; // not null
				_untranslated = value;
				if (_trim)
				{
					function trimItem(str:*, ..._):* { return StringUtil.trim(str) || '\n'; }
					value = value.split('\n').map(trimItem).join(' ');
					value = StringUtil.trim(StandardLib.replace(value, ' \n ', '\n\n'));
				}
				if (_translate)
					value = lang(value);
				super.text = value;
			}
			
        	private function init():void
        	{
				textField.height = 0;
        	}
			
        	private function resetHeight():void
        	{
    			if (parent && !editable)
    			{
					styleChanged("headerHeight");
					notifyStyleChangeInChildren("headerHeight", true);
					validateSize(true);
    			}
        	}
        
        	override public function set percentWidth(value:Number):void
        	{
        		super.percentWidth = value;
        	}
        	override public function set width(value:Number):void
        	{
        		super.width = value;
        	}
        
            override public function validateSize(recursive:Boolean=false):void
            {
            	super.validateSize(recursive);
				var text:String = textField.text;
				textField.height = 0;
				textField.autoSize = 'center';
            	if (wordWrap)
            	{
	            	textField.width;
            	}
            	else
            	{
					width = textField.width;
            	}
                height = textField.height;
            	//NOTE : there is still a bug that when you delete an extra line it will not update
				// the size until you type a new character, not sure why this happens...
				
				if (!_validatingSize)
				{
					_validatingSize = true;
					invalidateSize();
					validateNow();
					_validatingSize = false;
				}
            }
			private var _validatingSize:Boolean = false;
        ]]>
    </mx:Script>
</mx:TextArea>
