<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
                xmlns:ui="weave.ui.*"
                width="100%" height="100%"
                xmlns="weave.ui.*"
                label="Attribute Column Selection"
                creationComplete="handleCreationComplete()">
    <mx:HDividedBox id="selectorBox" width="100%" height="100%">
        <mx:VBox id="tableBox" height="100%" width="100%">
            <mx:ComboBox id="modeCombo" height="20" change="onComboSelect(event)" enabled="{enabled}">
            </mx:ComboBox>
            <mx:Tree height="100%" width="100%" id="tagtableTree" itemOpening="onGroupExpand(event)" change="onGroupSelect(event)" itemClick="onGroupSelect(event)" enabled="{enabled}"/>
            <mx:HBox id="editBox" width="100%" includeInLayout="false" visible="false">
                <ui:TextInputWithPrompt width="100%" id="addTagInput" prompt="New Tag Name" enabled="{enabled}" enter="addNewTag()"/>
                <mx:Button label="Add Tag" id="addTagButton" enabled="{enabled}" buttonDown="addNewTag()"/>
                <mx:Button label="Delete Tag" id="deleteTagButton" enabled="{enabled}" buttonDown="removeTag()"/>
            </mx:HBox>
        </mx:VBox>
        <mx:VBox id="tagsBox" height="100%" width="100%">
            <mx:Label text="Attribute Columns" height="20"/>
            <mx:List height="100%" width="100%" id="columnList" change="onColumnSelect(event)" enabled="{enabled}"/>
        </mx:VBox>
    </mx:HDividedBox>
    <mx:HBox id="searchBox" width="100%">
        <mx:TextInput width="75%" id="searchInput"/>
        <mx:ComboBox width="15%" id="metaCombo">
        </mx:ComboBox>
        <mx:Button width="10%" label="Search" id="searchButton" enabled="{enabled}"/>
    </mx:HBox>
<mx:Script>
<![CDATA[
    import mx.utils.ObjectUtil;
    import mx.binding.utils.BindingUtils;
    import mx.events.ListEvent;
    import mx.events.TreeEvent;
    import mx.rpc.events.ResultEvent;
    import weave.core.UIUtils;
    import weave.services.Admin;
    import weave.services.WeaveAdminService;
    import weave.services.beans.Entity;
    import weave.ui.EntityTreeNode;
    public var adminService:Admin
    [Bindable] public var selectedItem:EntityTreeNode;
    private var tagTree:Array;
    private var dataTables:Array;
    private var entitiesById:Object;
    private var expandList:Array;

    public function handleCreationComplete():void
    {
        var comboArray:Array = new Array("Tags","Tables");
        modeCombo.dataProvider = comboArray;

         
        return;
    }
    public function populateRoot(onFinish:Function=null):void
    {
        var acs:NewAttributeColumnSelector = this;
        function populateRootHandler(event:ResultEvent, token:Object = null):void
        {
            acs.dataTables = new Array();
            acs.tagTree = new Array();
            var entities:Array = event.result as Array || [];
            for each (var obj:Object in entities)
            {
				weaveTrace(ObjectUtil.toString(obj));
                var entity:Entity = new Entity(obj);
                if (entity == null) continue;
                if (entity.type == 2)
                    acs.tagTree.push(new EntityTreeNode(entity));
                else if (entity.type == 0)
                    acs.dataTables.push(new EntityTreeNode(entity));
            }
            if (onFinish != null)
            {
                onFinish();
            }
        }
        Admin.instance.getEntityChildren(-1, populateRootHandler);
    }
    private function frobProvider():void
    {
        var old:Object = tagtableTree.dataProvider;
        tagtableTree.dataProvider = null;
        tagtableTree.dataProvider = old;
        
        old = columnList.dataProvider;
        columnList.dataProvider = null;
        columnList.dataProvider = old;
    }
    private function onComboSelect(event:ListEvent):void
    {
		weaveTrace("Combo selected.");
        if (modeCombo.selectedItem == "Tags")
        {
            tagtableTree.dataProvider = tagTree;
            /* Todo: Test if we are superuser. */
            editorBox.includeInLayout = true;
            editorBox.visible = true;
        }
        else
        {
            tagtableTree.dataProvider = dataTables;
            editorBox.includeInLayout = false;
            editorBox.visible = false;
        }
        populateRoot(this.frobProvider);
    }
    private function onGroupExpand(event:TreeEvent):void
    {
        event.item.populate();
		weaveTrace("Expanded item."); 
    }
    private function setListProvider(etn:EntityTreeNode):void
    {
        columnList.dataProvider = etn.columns;
    }
    private function onGroupSelect(event:ListEvent):void
    {
        var etn:EntityTreeNode = tagtableTree.selectedItem as EntityTreeNode;
        if (etn == null) return;
        if (!etn.is_populated) etn.populate(setListProvider);
        setListProvider(etn);
        selectedItem = etn;
        columnList.selectedItem = null;
		weaveTrace("Group Selected.");
    }
    private function onColumnSelect(event:ListEvent):void
    {
		weaveTrace("Selected column.");
        var etn:EntityTreeNode = columnList.selectedItem as EntityTreeNode;
        if (etn != null)
            selectedItem = etn;
    }
    private function addNewTag():void
    {
        if (!addTagInput.text)
            UIUtils.componentPulse(addTagInput);
    }
    private function removeTag():void
    {
        if (selectedItem.object.type == 2)
        {
              
        }
    }
]]>
</mx:Script>
</mx:VBox>
