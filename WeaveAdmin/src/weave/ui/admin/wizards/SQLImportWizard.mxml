<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<admin:WizardViewStack
			xmlns:mx="http://www.adobe.com/2006/mxml"
			xmlns:ui="weave.ui.*"
			xmlns:admin="weave.ui.admin.*"
			xmlns="weave.ui.admin.wizards.*"
			label="{lang('Import SQL tables to Weave')}"
			>
	<mx:VBox width="100%" height="100%">
		<mx:CheckBox id="noAppendCheckBox" label="{lang('Create new Weave table entry even if a matching one already exists')}"/>
		<admin:SQLTableSelectorDialog id="tableSelector" change="handleChange()" showTableCombo="true" tableOverwriteCheckVisible="false" width="100%"/>
		<mx:VBox width="100%">
			<ui:Indent group="{tableSelector.indentGroup}" label="{lang('Table display name')}">
				<mx:TextInput id="tableNameInput"
							  change="handleChange();"
							  text="{tableSelector.activeTable}"
							  toolTip="{lang('Type in a name for the table that is chosen above. This is the name that will be visible in Weave and will be visible to users.')}"/>
			</ui:Indent>
			<admin:ImportTableKeyOptions id="keyOptions"
										 initialize="keyOptions.keyColumnIndent.group = tableSelector.indentGroup;"
										 visible="{Boolean(tableSelector.activeTable)}"
										 includeInLayout="{Boolean(tableSelector.activeTable)}"
										 change="handleChange()"
										 columnNames="{tableSelector.columns}"
										 keyColumnCheck="{checkKeyColumns}"
										 defaultKeyType="{tableSelector.activeTable}"/>
		</mx:VBox>
	</mx:VBox>
	<mx:Script>
		<![CDATA[
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import weave.services.Admin;
			import weave.services.addAsyncResponder;
			
			private static const paddingIndent:int = 20;
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				handleChange();
			}
			
			private function handleChange():void
			{
				keyOptions.keyColumnOk = false;
				
				var step1:Boolean = (
					tableSelector.activeSchema
					&& tableSelector.activeTable
					&& keyOptions.keyTypeSelector.selectedKeyType
					&& tableNameInput.text
				);
				stepsCompleted = [step1];
			}
			
			private function checkKeyColumns(onSuccess:Function = null):void
			{
				keyOptions.keyColumnOk = false;
				keyOptions.keyError = '';
				
				disable();
				addAsyncResponder(
					Admin.service.checkKeyColumnsForSQLImport(
						tableSelector.activeSchema,
						tableSelector.activeTable,
						keyOptions.selectedKeyColumns
					),
					function(event:ResultEvent, token:Object = null):void
					{
						enable();
						keyOptions.keyColumnOk = true;
						if (onSuccess != null)
							onSuccess();
					},
					function(event:FaultEvent, token:Object = null):void
					{
						enable();
						keyOptions.keyError = lang("Values in selected columns do not uniquely identify rows in the table");
					}
				);
			}

			override public function finish():void
			{
				checkKeyColumns(importSQLData);
			}
			
			private function importSQLData():void
			{
				disable();
				addAsyncResponder(
					Admin.service.importSQL(
						tableSelector.activeSchema,
						tableSelector.activeTable,
						keyOptions.mainKeyColumn,
						keyOptions.secondaryKeyColumn,
						tableNameInput.text,
						keyOptions.keyTypeSelector.selectedKeyType,
						keyOptions.filteredKeyColumns,
						!noAppendCheckBox.selected
					),
					function(..._):void { close(); },
					enable
				);
			}
		]]>
	</mx:Script>
</admin:WizardViewStack>
