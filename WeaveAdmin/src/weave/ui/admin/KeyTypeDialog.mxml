<?xml version="1.0" encoding="utf-8"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */
-->
<mx:VBox horizontalScrollPolicy="off" verticalScrollPolicy="off" 
		 xmlns="weave.ui.admin.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
		 width="100%"
		 creationComplete="creationComplete()"
		 xmlns:ui="weave.ui.*">

	<mx:HBox>
		<mx:Label text="{lang('What do these keys correspond to?')}"/>
		<ui:HelpComponent>
			If two tables have compatible keys, you should give them the same key type.
			If two tables have incompatible keys, they should not have the same key type.
			Weave only allows two columns to be compared if they have the same key type.
		</ui:HelpComponent>
	</mx:HBox>
	<mx:VBox paddingLeft="{paddingIndent}">
		<ui:Indent label="{lang('Key type')}"
				   enabled="{!refreshingKeyTypes}">
			<ui:CustomComboBox id="keyTypeCombo"
							   editable="true"
							   text="{_defaultKeyType}"
							   dataProvider="{admin.keyTypes}"
							   change="handleChange()"
							   valueCommit="if (UIUtils.hasFocus(keyTypeCombo)) keyTypeIsSet = true; handleChange()"
							   toolTip="{lang('Choose a key type that describes the identifiers in the key column.')}"/>
			<mx:Button id="keyTypeRefresh"
					   label="Refresh"
					   click="Admin.service.getKeyTypes()"
					   toolTip="{lang('This button updates the list of key types - use it if you think the list of key types may have changed since you first opened the admin console.')}"/>
		</ui:Indent>
	</mx:VBox>
	<mx:Metadata>
		[Event(name="change", type="flash.events.Event")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import weave.core.UIUtils;
			import weave.services.Admin;
			
			[Bindable] private var admin:Admin = Admin.instance;
			[Bindable] public var paddingIndent:int = 20;
			[Bindable] private var _indent:Number = NaN;
			
			private function creationComplete():void
			{
				var busy:Function = function():void { refreshingKeyTypes = true; };
				var done:Function = function():void { refreshingKeyTypes = false; };
				Admin.service.addHook(Admin.service.getKeyTypes, busy, done, done);
				
				Admin.service.getKeyTypes();
			}
			
			public function get selectedKeyType():String
			{
				return keyTypeCombo.text;
			}
			
			public function set defaultKeyType(value:String):void
			{
				if (!keyTypeIsSet)
					_defaultKeyType = value;
			}
			[Bindable] private var _defaultKeyType:String = '';
			
			private var keyTypeIsSet:Boolean = false;
			[Bindable] private var refreshingKeyTypes:Boolean = false;
			
			private function handleChange():void
			{
				dispatchEvent(new Event(Event.CHANGE));
			}
		]]>
	</mx:Script>
</mx:VBox>
