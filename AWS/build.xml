<project name="AWS" basedir="." default="all">

    <property environment="env"/>
	<property file="${workspace_loc}/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.core.resources.prefs"/>
	
	<property name="docroot" value="${pathvariable.WEAVE_DOCROOT}" />
	<property name="build-dir" value="${basedir}/build" />
	<property name="dist-dir" value="${docroot}/aws"/>
	<property name="src-dir" value="${basedir}/src"/>
	<property name="app-dir" value="${basedir}/app"/>
	
	<taskdef name="jscomp" classpath="${basedir}/lib/compiler.jar" classname="com.google.javascript.jscomp.ant.CompileTask"/>

	<target name="all" depends="clean, compile, app, dist">
	</target>
	
	<target name="clean">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${build-dir}" includes="**/*"/>
		</delete>
	</target>
	
	<target name="compile">
		<!--
			Using the <path> element allows us to specify wildcards for the jscomp command.
			http://stackoverflow.com/questions/14164325/use-wildcards-in-a-google-closure-compiler-ant-build
		-->
		<path id="aws.js.fileset">
			<fileset dir="${src-dir}/aws">
				<include name="**/*.js" />
			</fileset>
		</path>
		
		<!-- jscomp: google closure compiler command -->
		<jscomp
		    	compilationLevel="simple"
		    	warning="verbose" 
		        debug="true"
		        prettyPrint="true"
		        sourceMapOutputFile="${build-dir}/blah.map"
		        output="${build-dir}/aws.js">
			
			<externs dir="${basedir}/externs">
				<file name="jquery-1.9.js"/>
				<file name="myexterns.js"/>
			</externs>

			<path refid="aws.js.fileset"/>
			
			<sources dir="${src-dir}">
			    <file name="goog/base.js"/>
			</sources>

			<!--
			<sources dir="${basedir}/src">
				<file name="aws/client/commons.js"/>
				<file name="aws/client/DataClient.js"/>
			</sources>
			-->

		</jscomp>
		
		<!-- TEMPORARY SOLUTION - copy all files to build folder -->
		<copy todir="${build-dir}">
			<fileset dir="${src-dir}"/>
		</copy>
<!-- 		<copy todir="${build-dir}" file="${src-dir}/test.html"/> -->
		
	</target>
	
	<target name="app">
		<!-- TEMPORARY SOLUTION - copy all files to build folder -->
		<copy todir="${build-dir}">
			<fileset dir="${app-dir}"/>
		</copy>
	</target>
	
	<target name="dist" >
		<echo message="Dist-Build ${ant.project.name} ... ${dist-dir}"/>
		
		<mkdir dir="${dist-dir}"/>
		<delete quiet="false" includeemptydirs="true">
			<fileset dir="${dist-dir}" />
		</delete>
		<copy todir="${dist-dir}">
			<fileset dir="${build-dir}"/>
		</copy>
	 </target>
	 

	<macrodef name="compile-soy">
		<attribute name="file"/>
		<sequential>
		    
			<java jar="${basedir}/lib/SoyToJsSrcCompiler.jar" fork="true" failonerror="true">
		    	<arg value="--outputPathFormat"/>
		    	<arg value="${basedir}/generated/{file}.js"/>
		    	<arg value="--srcs"/>
		    	<arg value="${src-dir}/{file}.soy"/>
			</java>
		</sequential>
	</macrodef>
	<!-- <compile-soy file="mytemplate.soy"/> -->
	
</project>