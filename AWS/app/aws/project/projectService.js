/**
 * contains all the functions required for project management 
 */

var projectManagementURL = '/WeaveAnalystServices/ProjectManagementServlet';

angular.module('aws.project').service('projectService', ['$q', '$rootScope', function($q, scope){
	
	var that = this;
	this.data= {};
	this.data.projectSelectorUI;//for state preservation between tabs
	/**
     * This function wraps the async aws getListOfProjects function into an angular defer/promise
     * So that the UI asynchronously wait for the data to be available...
     */
   
    this.getListOfProjectsfromDatabase = function() {
		aws.queryService(projectManagementURL, 'getProjectListFromDatabase', null, function(result){
			that.data.listOfProjectsFromDatabase = result;
        });
    };

    /**
     * This function wraps the async aws getQueryObjectsInProject function into an angular defer/promise
     * So that the UI asynchronously wait for the data to be available...
     */
    this.getListOfQueryObjects = function(projectName) {
    	var deferred = $q.defer();
    	var params = {};
    	params.projectName = projectName;
    	aws.queryService(projectManagementURL, 'getListOfQueryObjects', [params], function(AWSQueryObjectCollectionObject){
    		var returnedQueryObjects = [];
    		if(!(angular.isUndefined(AWSQueryObjectCollectionObject)))
    			{
    			
        			var countOfJsons = AWSQueryObjectCollectionObject.finalQueryObjects.length;
        			for(var i = 0; i < countOfJsons; i++)
        			{
        				returnedQueryObjects[i] = JSON.parse(AWSQueryObjectCollectionObject.finalQueryObjects[i]);
        			}
        			
        			that.data.listofQueryObjectsInProject = returnedQueryObjects;//list of returned JSON Objects
        			that.data.queryNames = AWSQueryObjectCollectionObject.queryObjectNames;//thier names
        			that.data.projectDescription = AWSQueryObjectCollectionObject.projectDescription;//description of the project
        			that.data.thumbnails = AWSQueryObjectCollectionObject.thumbnails;//base64 string that is the snapshot of the session state generated by the query objects
        			
        			
        			//building the metadata of the query object
        			for(var i in that.data.listofQueryObjectsInProject){
        				that.data.columnString = "";
        				var columns = that.data.listofQueryObjectsInProject[i].ScriptColumnRequest;
        				for(var j in columns){
        					var title = columns[j].title;
        					that.data.columnString= that.data.columnString.concat(title) + " , ";
        				}
        				that.data.columnString = that.data.columnString.slice(0,-2);//getting rid of the last comma
        			}
        			
        			//creating the thumbnails to display in every query Objects
        			that.data.thumbnailsToDisplay = [];
        			if (!(angular.isUndefined(that.data.thumbnails))) {
        				for ( var i = 0; i < that.data.thumbnails.length; i++) {
        					var imageString = "data:image/png;base64,"
        							+ that.data.thumbnails[i];
        					that.data.thumbnailsToDisplay[i] = imageString;
        				}
        			}
        			
        			//make the complete object 
        			if(!(angular.isUndefined(that.data.listofQueryObjectsInProject)))
        				{
        					that.data.completeObjects = [];
        					for(var f = 0; f < that.data.listofQueryObjectsInProject.length; f++){
        						var tempObject = {};
        						tempObject.queryObject = that.data.listofQueryObjectsInProject[f];
        						tempObject.thumbnail = that.data.thumbnailsToDisplay[f];
        						that.data.completeObjects.push(tempObject);
        					}
        				}
        			
    			}
    		
	    		scope.$safeApply(function() {
	                deferred.resolve(AWSQueryObjectCollectionObject);
	            });
        	
        });
    };
    
    var newWeave;
    
    /**
     * this function returns the session state corresponding to the thumbnail that was clicked
     */
    this.returnSessionState = function(queryObject){
   	 var deferred = $q.defer();
   	 queryObject = angular.toJson(queryObject);
   	 console.log("stringified queryObject", queryObject);
   	 aws.queryService(projectManagementURL, 'returnSessionState', [queryObject], function(result){
    		
   		 that.data.weaveSessionState = result;
   		 
   		if(!(angular.isUndefined(that.data.weaveSessionState))){
   		 if (!newWeave || newWeave.closed) {
				newWeave = window
						.open("aws/visualization/weave/weave.html",
								"abc",
								"toolbar=no, fullscreen = no, scrollbars=yes, addressbar=no, resizable=yes");
				newWeave.setSession = that.data.weaveSessionState;
			}
   		 else{
   			 newWeave.setSessionHistory(that.data.weaveSessionState);
   		 }
   		 newWeave.logvar = "Displaying Visualizations";
   		}
   		 
        	scope.$safeApply(function() {
                deferred.resolve(result);
            });
        	
        });
    		
  
		return deferred.promise;
   };
    
    
}]);
